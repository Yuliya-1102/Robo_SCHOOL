{"version":3,"file":"src_js_components_validation_js.main.js","mappings":"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","sources":["webpack://gulp-builder/./src/js/components/validation.js","webpack://gulp-builder/./src/js/functions/validate-forms.js"],"sourcesContent":["import { validateForms } from '../functions/validate-forms';\nconst rules = [\n  {\n    ruleSelector: '.input-name',\n    rules: [\n      {\n        rule: 'minLength',\n        value: 3\n      },\n      {\n        rule: 'required',\n        value: true,\n        errorMessage: 'Заполните имя!'\n      }\n    ]\n  },\n  {\n    ruleSelector: '.input-tel',\n    tel: true,\n    telError: 'Введите корректный телефон',\n    rules: [\n      {\n        rule: 'required',\n        value: true,\n        errorMessage: 'Заполните телефон!'\n      }\n    ]\n  },\n  {\n    ruleSelector: '.input-email',\n    rules: [\n      {\n        rule: 'required',\n        value: true,\n        errorMessage: 'Заполните email!'\n      },\n      {\n        rule: 'email',\n        value: true,\n        errorMessage: 'Введите корректный email!'\n      }\n    ]\n  }\n];\n\nconst afterForm = () => {\n  console.log('Произошла отправка, тут можно писать любые действия');\n};\n\nvalidateForms('.order__form', rules, afterForm);\n","import JustValidate from 'just-validate';\r\nimport Inputmask from \"inputmask\";\r\n\r\nexport const validateForms = (selector, rules, afterSend) => {\r\n  const form = document?.querySelector(selector);\r\n  const telSelector = form?.querySelector('input[type=\"tel\"]');\r\n\r\n  if (!form) {\r\n    console.error('Нет такого селектора!');\r\n    return false;\r\n  }\r\n\r\n  if (!rules) {\r\n    console.error('Вы не передали правила валидации!');\r\n    return false;\r\n  }\r\n\r\n  if (telSelector) {\r\n    const inputMask = new Inputmask('+7 (999) 999-99-99');\r\n    inputMask.mask(telSelector);\r\n\r\n    for (let item of rules) {\r\n      if (item.tel) {\r\n        item.rules.push({\r\n          rule: 'function',\r\n          validator: function() {\r\n            const phone = telSelector.inputmask.unmaskedvalue();\r\n            return phone.length === 10;\r\n          },\r\n          errorMessage: item.telError\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const validation = new JustValidate(selector);\r\n\r\n  for (let item of rules) {\r\n    validation\r\n      .addField(item.ruleSelector, item.rules);\r\n  }\r\n\r\n  validation.onSuccess((ev) => {\r\n    let formData = new FormData(ev.target);\r\n\r\n    let xhr = new XMLHttpRequest();\r\n\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          if (afterSend) {\r\n            afterSend();\r\n          }\r\n          console.log('Отправлено');\r\n        }\r\n      }\r\n    }\r\n\r\n    xhr.open('POST', 'mail.php', true);\r\n    xhr.send(formData);\r\n\r\n    ev.target.reset();\r\n  })\r\n\r\n};\r\n"],"names":["validateForms","rules","ruleSelector","rule","value","errorMessage","tel","telError","afterForm","console","log","JustValidate","Inputmask","selector","afterSend","form","document","querySelector","telSelector","error","inputMask","mask","item","push","validator","phone","inputmask","unmaskedvalue","length","validation","addField","onSuccess","ev","formData","FormData","target","xhr","XMLHttpRequest","onreadystatechange","readyState","status","open","send","reset"],"sourceRoot":""}